<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">  <head>    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />    <title></title>  </head>  <body>    <p>1. What are Apache Filters?<br />    </p>    <p>The Apache version 2 API was rewritten to make Apache much easier to      extend. One of the major changes was the introduction of a filter API      which allows you to write code which examines and possibly modifies the      request data flowing into the web server from the client and the response      data flowing back from the web server to the client.<br />      This data may flow through various filters which may transform it in      various ways: insert content (eg mod_include), encrypt it (mod_ssl),      compress it (mod_deflate) <br />    </p>    <p>In a nutshell, Apache 2 filter framework uses same idea as Unix command      line filters:  <code>ps ax |grep "apache.*httpd" | wc-l <br />      </code></p>    <p>2. What is  APR   mod_ta.c written in ?</p>    <p>The Apache Portable Runtime (APR) and Utilities (APR-UTILS or APU) are      pair of c libraries used by Apache httpd. The main purpose of APR is to      provide a portable, platform-independent layer for applications. Prior to      the APR, Apache code was littered with platform-determined conditionally      compiled code, which made the code hard to read and maintain.  The APR      delivers an almost totally uniform API regardless of the run time platform      by abstracting away operating system differences. <br />    </p>    <p> 3. What does mod_ta do? <br />    </p>    <p>The mod_ta module is implemented as Apache version 2 output filter. The      mod_ta is inserted into chain of apache filters after a response body and      response headers are already generated. The mod_ta establishes tcp/ip      socket with transactional archive (theresourcedepot.com ) and sends data      (request, response headers and response body)  using PUT method of HTTP      protocol. By using chunked transfer encoding the mod_ta filter is  able to      send data to archive  as soon as reading it from a output of previous       handle/filter, so data processing integrated in clean and efficient way      with apache chain of events.   <br />      <span style="font-family: &quot;Times New Roman&quot;;"></span></p>    <p>4. What if I do not  want to archive  some selected directories at my      apache server?</p>    <p>Using provided configuration options it is possible to unregister      insertion of the mod_ta filter for some directories at apache server. To      illustarate, let's assume that institution does not want to archive search      results pages which is served at http://&lt;host&gt;/search?author=bla.      Corresponding config statement at mod_ta module config is " <code>        Excluded  /search "</code>.  </p>    <p>5. I have several virtual hosts  configured on my apache server. Can I      archive just one domain? <br />    </p>    <p> The mod_ta filter  can be configured per virtual hosts. If mod_ta      configuration is not present in virtual host configuration section  by      default mod_ta filter  is disabled for corresponding domain. <br />    </p>    <p style="text-align: justify; height: 335px;"><span style="font-size:18.0pt;font-family:&quot;Times New Roman&quot;;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:&quot;HG Mincho Light J&quot;;mso-bidi-font-family: &quot;HG Mincho Light J&quot;;color:black;language:en-GB"><br />          <br />      </span></p>  </body></html>